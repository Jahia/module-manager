<% pageContext.setAttribute("newLineChar", "\n"); %>
<c:if test="${not isStudio or not empty currentModule.sourcesFolder}">
    <tr>
        <td>
            <span><b>${currentModule != null ? currentModule.name : defaultVersion.name}</b> &nbsp;(${entry.key})</span>
            <c:if test="${isMandatoryDependency}">
                <span class="text-error" title="${i18nMandatoryDependency}"><a href="#mandatory-dependency" class="text-error"><strong>*</strong></a></span>
            </c:if>
            <c:if test="${not empty errors[entry.key]}">
                <div class="alert alert-danger"><strong>${fn:replace(errors[entry.key],newLineChar,'<br/>')}</strong></div>
            </c:if>

            <c:if test="${isStudio}">
                <c:url var="urlDetails" value="${url.base}/modules/${currentModule.id}.html"/>
                <button data-toggle="tooltip" data-placement="bottom" title="" data-original-title="${i18nModuleDetails}" class="btn btn-fab btn-fab-xs btn-info" type="button" onclick='window.location.assign("${urlDetails}")'>
                    <i class="material-icons">info_outline</i>
                </button>
            </c:if>
            <c:if test="${not isStudio}">
                <form style="margin: 0;" action="${flowExecutionUrl}" method="POST" id="viewDetails-${entry.key}">
                    <input type="hidden" name="selectedModule" value="${entry.key}"/>
                    <input type="hidden" name="_eventId_viewDetails">
                </form>
            </c:if>
        </td>


            <td style="padding-left: 5px; padding-right: 0">
                <c:remove var="sourcesFound" />
                <c:forEach items="${entry.value}" var="version">
                    <c:set var="isActiveVersion" value="${version.key == currentModule.version}"/>
                    <c:set var="displayVersionAndState" value="true"/>
                    <c:if test="${not isStudio}">
                        <c:set var="showInChip" value="true" />
                        <%@include file="moduleVersionActions.jspf" %>
                    </c:if>
                    <c:if test="${isStudio and isActiveVersion}">
                        <div class="active-version">
                                ${version.key}
                        </div>
                    </c:if>
                    <c:if test="${not empty version.value.sourcesFolder}">
                        <c:set var="sourcesFound" value="${version.key}"/>
                    </c:if>
                </c:forEach>
                <c:if test="${not empty availableUpdates[entry.key] and not functions:contains(systemSiteRequiredModules,entry.key)}">

                  <fmt:message key="serverSettings.manageModules.updateAvailable" var="updateMessage">
                      <fmt:param value="${availableUpdates[entry.key].version}"/>
                  </fmt:message>
                  <form action="${flowExecutionUrl}" method="POST" onsubmit="workInProgress('${i18nWaiting}');" class="form-inline">

                      <div class="chip actions updateNotif">
                          <small>&nbsp;${availableUpdates[entry.key].version}</small>

                          <button data-toggle="tooltip" data-placement="bottom" title="" data-original-title="<fmt:message key="serverSettings.manageModules.module.install"/>"
                                  data-container="body" style="display: inline-block;" class="btn btn-fab btn-fab-xs btn-success"
                                  type="submit"
                                  name="_eventId_installModuleOnly" onclick="">
                              <i class="material-icons updateModule">play_for_work</i>
                          </button>
                      </div>
                      <fmt:message key="serverSettings.manageModules.upload.autoStart" var="autoStartMessage"/>
                          <input type="hidden" name="moduleAutoStart"/>
                          <input type="hidden" name="forgeId" value="${availableUpdates[entry.key].forgeId}"/>
                          <input type="hidden" name="moduleUrl" value="${availableUpdates[entry.key].downloadUrl}"/>
                  </form>
                </c:if>
            </td>

            <c:if test="${empty currentModule}">
                <td>
                    <span class="inactive-label"><fmt:message key="serverSettings.manageModules.module.state.inactive"/></span>
                </td>
            </c:if>
            <c:if test="${not empty currentModule}">
                <td>
                    <c:if test="${currentModule.state =='Started'}">
                            <span class="started-label">&nbsp;${currentModule.version}
                            (<fmt:message key="serverSettings.manageModules.module.state.${fn:toLowerCase(currentModule.state.state)}"/>)</span>
                    </c:if>
                    <c:if test="${currentModule.state !='Started'}">
                            <span class="inactive-label">&nbsp;${currentModule.version}
                            (<fmt:message key="serverSettings.manageModules.module.state.${fn:toLowerCase(currentModule.state.state)}"/>)</span>
                    </c:if>
                </td>
            </c:if>
            <td>
                <c:choose>
                    <c:when test="${not empty sitesTemplates[entry.key]}"><fmt:message key='serverSettings.manageModules.usedInSites.templates'/></c:when>
                    <c:when test="${not empty sitesDirect[entry.key]}"><fmt:message key='serverSettings.manageModules.usedInSites.direct'/></c:when>
                    <c:when test="${empty sitesDirect[entry.key] and not empty sitesTransitive[entry.key]}"><fmt:message key='serverSettings.manageModules.usedInSites.transitive'/></c:when>
                    <c:otherwise>&nbsp;</c:otherwise>
                </c:choose>
            </td>

    </tr>
</c:if>
